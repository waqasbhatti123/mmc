@model FOS.Shared.OrderSummaryReportData

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href='~/Content/Style/fullcalendar.min.css' rel='stylesheet' />
<link href='~/Content/Style/fullcalendar.print.min.css' rel='stylesheet' media='print' />
<script src='~/Scripts/lib/moment.min.js'></script>
<script src='~/Scripts/lib/jquery-ui.min.js'></script>
<script src='~/Scripts/lib/fullcalendar.min.js'></script>
<link href="~/Content/Style/jquery-ui.min.css" rel="stylesheet" />
<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li>
                <a href="#">Daily Sale Report</a>
            </li>
        </ul>
    </div>
</div>


@using (Ajax.BeginForm("OrderSummaryReport", "Reports", new AjaxOptions { HttpMethod = "POST" }, new { @class = "form-horizontal", id = "myForm" }))
{


    //@Html.AntiForgeryToken()
    //@Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green" style="min-height: 100px;">
                <div class="widget-title">
                    <h4>Daily Sale Report</h4>
                    <span class="tools">
                        @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                        @*<a href="javascript:;" class="icon-remove"></a>*@
                    </span>
                </div>
                <div class="widget-body" style="min-height: 100px;">
                    <div class="span5">

                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Report Type</label>
                            <div class="controls">
                                @Html.RadioButtonFor(model => model.Type, "Daily", new { @id = "rrt1", @checked = true }) Daily
                                @Html.RadioButtonFor(model => model.Type, "Weekly", new { @id = "rrt2" }) Weekly
                                @Html.RadioButtonFor(model => model.Type, "Monthly", new { @id = "rrt2" }) Monthly
                            </div>
                        </div>

                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Date From  *</label>
                            <div class="controls">
                                <input class="text-box single-line" id="StartingDate1" name="StartingDate1" style="height: 22px; width: 202px; margin-bottom: 0px;">
                            </div>
                        </div>

                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Date To *</label>
                            <div class="controls">
                                <input class="text-box single-line" id="StartingDate2" name="StartingDate2" style="height: 22px; width: 202px; margin-bottom: 0px;">
                            </div>
                        </div>
                    
                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">RegionalHead *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.RegionID, new SelectList(Model.RegionalHead, "ID", "Name"), new { @class = "" })
                                @Html.ValidationMessageFor(model => model.RegionID)
                                @Html.HiddenFor(model => model.RegionID)
                            </div>
                        </div>
                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Sale Officer *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.SaleOfficerID, new SelectList(Model.SaleOfficer, "ID", "Name"), new { @class = "" })
                                @Html.ValidationMessageFor(model => model.SaleOfficerID)
                                @Html.HiddenFor(model => model.SaleOfficerID)
                            </div>
                        </div>



                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Distributor *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.DistributorID, new SelectList(Model.dealerdata, "ID", "ShopName"), new { @class = "" })
                                @Html.ValidationMessageFor(model => model.DistributorID)
                                @Html.HiddenFor(model => model.DistributorID)
                            </div>
                        </div>
                        <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                            <div class="form-actions" style="padding-left: 130px; padding-right: 0px;">
                                <button type="submit" id="btnNew" class="btn btn-primary">
                                    <i class="icon-ok icon-white" style="padding-right: 8px"></i><span id="create">Export Report</span>
                                </button>

                            </div>
                        </div>


                    </div>

                    <div class="span5">

                        <div id="THDiv">

                            <!-- Visit Type -->



                        </div>


                        <!-- Buttons -->


                    </div>
                </div>

            </div>
        </div>
    </div>

}
<script>
    $('#btnNew').click(function () {
        //var message = "";
        //for (i = 0; i < sPainters.length ; i++) {
        //    message += sPainters[i] + ",";
        //}
        //var $Shoptypeid = $("#Shoptypeid").val();
        debugger;
        var $TID = $("#SaleOfficerID").val();
        var $sdate = $("#StartingDate1").val();
        var $edate = $("#StartingDate2").val();
        var $range = $("#RangeID").val();
        var type;
        var r1 = $("#rrt1").is(":checked");
        var r2 = $("#rrt2").is(":checked");
        var r3 = $("#rrt3").is(":checked");
        if (r1 == true) {
            type = "Daily";
        }
        else if (r2 == true)
        {
            type = "Weekly";
        }
        else {
            type = "Monthly";
        }


        if ($sdate == "") {
            alertify.error("Please Enter Starting Date");
        }
        else if ($edate == "") {
            alertify.error("Please Enter Ending Date");
        }
        else {
            var $sdate = $("#StartingDate1").val();
            var $edate = $("#StartingDate2").val();
            var $fosid = $("#RangeID").val();
            var $Disid = $("#DistributorID").val();
            @*if ($("#cbCheck1").is(':checked') == true) {
                window.open("@Url.Action("CityMonthWiseIntakeReport", "Retailer")" + "?StartingDate=" + $("#StartingDate1").val() + "&EndingDate=" + $("#StartingDate2").val() + "&TID=" + $("#TID").val() + "&Shoptypeid=" + $("#Shoptypeid").val() + "&message=" + message + "", "_top");
            }*@
            //else {
            window.open("@Url.Action("OrderSummary", "Reports")" + "?StartingDate=" + $("#StartingDate1").val() + "&EndingDate=" + $("#StartingDate2").val() + "&DisID=" + $("#DistributorID").val()  + "&TID=" + $("#SaleOfficerID").val() + "&type=" + type);
            //}
        }
    });

    $("#SaleOfficerID").change(function () {
        debugger;
        LoadDistributor();

    });
    $("#RegionID").change(function () {
        debugger;
        LoadSaleOfficers();

    });
        function LoadHeads() {

            try {
                var RegionalHeadID = $("#RangeID").val();


                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID, selectOption: true },
                    url: "@Url.Action("GetHeadsRelatedtorange", "Job")",
                    success: function (json) {

                        var $el = $("#RegionID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });


                        LoadSaleOfficers();


                    }

                });
              

            } catch (e) {
                alert(e);
                //  $('#datatab').dataTable().fnDestroy();
            }

        }
    
        $("#RangeID").change(function () {


            LoadHeads();

            //$("#RetailerTypeDiv").hide();
        });
    function LoadSaleOfficers() {
        try {
            var regID = $("#RegionID").val();
            debugger;
            $.ajax({
                type: "POST",
                data: { RegionalHeadID: regID, selectOption: true },
                url: "@Url.Action("GetAllSaleOfficerListRelatedToHeadrSelectOption", "Job")",
                dataType: 'json',
                success: function (json) {
                    debugger;
                    var $el = $("#SaleOfficerID");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option></option>")
                            .val(key.SaleOfficerID).text(key.SaleOfficerName));
                    });


                }
            });
        } catch (e) {
            alert(e);

        }
    }
    function LoadDistributor() {
        try {
            var SaleOfficerID = $("#SaleOfficerID").val();
            debugger;
            $.ajax({
                type: "POST",
                data: { SOID: SaleOfficerID, dtFrom: $("#StartingDate1").val(), dtTo:  $("#StartingDate2").val()},
                url: "@Url.Action("GetDistributorRetailedtoSOByDate", "Reports")",
                dataType: 'json',
                success: function (json) {
                    debugger;
                    var $el = $("#DistributorID");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option></option>")
                                .val(key.ID).text(key.ShopName));
                    });


                }
        });
    } catch (e) {
        alert(e);

    }

    }
    $(document).ready(function () {

        $('#StartingDate1').datepicker(
        {
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2100'
        });

        $('#StartingDate2').datepicker(
        {
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2100'
        });
    });
</script>