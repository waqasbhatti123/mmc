 
 @{
        ViewBag.Title = "Retailer";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }


    <style>
       #map {
            width: 100%;
            height: 535px;
      }
    </style>


<!-- BEGIN PAGE HEADER-->
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN THEME CUSTOMIZER-->

            <!-- END THEME CUSTOMIZER-->
            <!-- BEGIN PAGE TITLE & BREADCRUMB-->
            <h3 class="page-title"></h3>
            <ul class="breadcrumb">
                <li>
                    <a href="#">Retailer</a>
                    <span class="divider">/</span>
                </li>
                <li>
                    <a href="#">Retailer Map View</a>
                </li>
            </ul>
            <!-- END PAGE TITLE & BREADCRUMB-->
        </div>
    </div>

    <!-- BEGIN PAGE HEADER-->
    <div class="row-fluid">
        <div class="span12">

            <div class="control-group" style="margin-bottom:0px;float:left">
                                  <label class="control-label">Regional Head</label>
                                    <div class="controls" style="margin-left:0px">

                                        <select class="form-control chosen-select" id="regionalHead" style="width: 190px;">
                                             <option value="0">Select Any</option>
                                                    @{
                                                        foreach (FOS.Shared.RegionalHeadData obj in ViewBag.RegionalHead)
                                                        {
                                                            <option value="@obj.ID">@obj.Name</option>
                                                        }
                                                    }
                                       </select>

                                    </div>
                                </div>
    
             @*<div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px">
                                  <label class="control-label">Distributor</label>
                                    <div class="controls" style="margin-left:0px">

                                        <select class="form-control chosen-select" id="dealer" style="width: 190px;">
                                            <option value="0">Select Any</option>
                                                    @{
                                                        foreach (FOS.Shared.DealerData obj in ViewBag.Dealers)
                                                        {
                                                            <option value="@obj.ID">@obj.Name</option>
                                                        }
                                                    }
                                       </select>

                                    </div>
                                </div>*@

                        <div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px">
                                  <label class="control-label">Sales Officer</label>
                                    <div class="controls" style="margin-left:0px">
                                       
                                        <select class="form-control chosen-select" id="saleOfficer" style="width: 190px;">
                                            <option value="0">Select Any</option>
                                                    @{
                                                        foreach (FOS.Shared.SaleOfficerData obj in ViewBag.SaleOfficer)
                                                        {
                                                            <option value="@obj.ID">@obj.Name</option>
                                                        }
                                                    }
                                       </select>

                                    </div>
                                </div>

            <div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px; display:none;">
                                  <label class="control-label">Region</label>
                                    <div class="controls" style="margin-left:0px">
                                        

                                        <select class="form-control chosen-select" id="region" style="width: 190px;">
                                            <option value="0">Select Any</option>
                                                    @{
                                                        foreach (FOS.Shared.RegionData obj in ViewBag.Region)
                                                        {
                                                            <option value="@obj.RegionID">@obj.Name</option>
                                                        }
                                                    }
                                       </select>

                                    </div>
                                </div>

            <div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px">
                                  <label class="control-label">City</label>
                                    <div class="controls" style="margin-left:0px">
                                        
                                        <select class="form-control chosen-select" id="city" style="width: 190px;">
                                            <option value="0">Select Any</option>
                                                    @{
                                                        foreach (FOS.Shared.CityData obj in ViewBag.City)
                                                        {
                                                            <option value="@obj.ID">@obj.Name</option>
                                                        }
                                                    }
                                       </select>

                                    </div>
                                </div>

            <div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px">
                <label class="control-label">Zone</label>
                <div class="controls" style="margin-left:0px">

                    <select class="form-control chosen-select" id="zone" style="width: 190px;">
                        <option value="0">Select Any</option>
                        @{
                            foreach (FOS.Shared.ZoneData obj in ViewBag.Zone)
                            {
                                <option value="@obj.ID">@obj.Name</option>
                            }
                        }
                    </select>

                </div>
            </div>

            <div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px;margin-top:28px;">
                <table style="padding-left:10px;font-size:small;" border="0">
                    <tr>
                        <td style="color:#ce0019;font-weight:600;">Total Retailers: </td>
                        <td><span id="totalRet">&nbsp;&nbsp;</span></td>
                        @*</tr>
                    <tr>*@
                        <td style="color:#ce0019;font-weight:600;padding-left:25px">Tagged Retailers: </td>
                        <td><span id="tagRet">&nbsp;&nbsp;</span></td>
                        <td><span id="tagRetExp" style="display:none;"><a href="javascript:exportRpt(1);">Export</a></span></td>
                        @*</tr>
                    <tr>*@
                        <td style="color:#ce0019;font-weight:600;padding-left:25px">Untagged Retailers: </td>
                        <td><span id="untagRet">&nbsp;&nbsp;</span></td>
                        <td><span id="untagRetExp" style="display:none;"><a href="javascript:exportRpt(2);">Export</a></span></td>
                    </tr>
                </table>

            </div>

            @*<div class="control-group" style="margin-bottom:0px;float:left;margin-left:12px">
                <table style="padding-left:10px" border="1">
                    <tr>
                        <td>Total Retailers: </td>
                        <td><span id="totalRet">&nbsp;&nbsp;</span></td>
                    </tr>
                    <tr>
                        <td>Tagged Retailers: </td>
                        <td><span id="tagRet">&nbsp;&nbsp;</span></td>
                    </tr>
                    <tr>
                        <td>Untagged Retailers: </td>
                        <td><span id="untagRet">&nbsp;&nbsp;</span></td>
                    </tr>
                </table>

            </div>*@

        </div>
    </div>

      <div class="row-fluid" style="min-height: 1225px;"> @*onload="initialize()">*@

            <div class="span12" style="margin-top:12px">
                <!-- BEGIN SAMPLE FORMPORTLET-->
                <div class="widget blue">
                    <div class="widget-body" style="padding:5px">

                         <div class="map" id="map"></div>

                    </div>
               </div>
           </div>
    </div>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7X3GhN_ShrwYqU1Wc0gJbX3CMOMPZIs4"></script>
<script type="text/javascript">

    function exportRpt(type) {
        var RegionalHeadID = $("#regionalHead").val();
        var DealerID = $("#dealer").val();
        var SaleOfficerID = $("#saleOfficer").val();
        var CityID = $("#city").val();
        var ZoneID = $("#zone").val();
        window.location = '/Retailer/ExportToCSV?rptType='+type+'&regHdId=' + RegionalHeadID + '&distId=' + DealerID + '&soId=' + SaleOfficerID + '&cityId=' + CityID + '&zoneId=' + ZoneID;
    }

    function GetPins() {

        locations = [];

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetRetailerLocationsByAllFilters", "Retailer")",
            dataType: 'json',
            data: {
                RegionalHeadID: $("#regionalHead").val(),
                DealerID: $("#dealer").val(),
                SaleOfficerID: $("#saleOfficer").val(),
                RegionID: $("#region").val(),
                CityID: $("#city").val(),
                ZoneID: $("#zone").val()
            },
            success: function (json) {

                locations = [];

                $.each(json, function (value, key) {

                    var array = key.Location.split(",");
                    locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "," + key.Phone1 + "," + key.Name + "");

                });

                var marker, i;

                var myOptions = {
                    center: new google.maps.LatLng(31.4265, 74.4538),
                    zoom: 9,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var map = new google.maps.Map(document.getElementById("map"),
                    myOptions);

                var markers = []; //array for all markers

                for (i = 0; i < locations.length; i++) {
                    var array = locations[i].split(",");
                    var name = array[0];
                    var lat = array[1];
                    var long = array[2];
                    var add = array[3];
                    var phone1 = array[4];
                    var retName = array[5];

                    latlngset = new google.maps.LatLng(lat, long);

                    var marker = new google.maps.Marker({
                        map: map, title: name, position: latlngset,
                        animation: google.maps.Animation.DROP
                    });

                    markers.push(marker);

                    map.setCenter(marker.getPosition())

                    var content = "<b> " + name + " </b><br/>"
                                    + retName + "<br/>"
                                    + lat + " , " + long + "<br/>"
                                    + phone1 + "<br/>"
                                    + add;
                    var infowindow = new google.maps.InfoWindow()

                    google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                        return function () {
                            infowindow.setContent(content);
                            infowindow.open(map, marker);
                        };
                    })(marker, content, infowindow));
                }

                //var bounds = new google.maps.LatLngBounds();
                //for (var i = 0; i < markers.length; i++) {
                //    //debugger;
                //    bounds.extend(markers[i].getPosition());
                //}

                //map.fitBounds(bounds);


            },
            async: true
        });

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetRetailerLocationsCount", "Retailer")",
            dataType: 'json',
            data: {
                RegionalHeadID: $("#regionalHead").val(),
                DealerID: $("#dealer").val(),
                SaleOfficerID: $("#saleOfficer").val(),
                RegionID: $("#region").val(),
                CityID: $("#city").val(),
                ZoneID: $("#zone").val()
            },
            success: function (json) {
                var array = json.split(",");
                
                var tag = parseInt(array[0]);
                var untag = parseInt(array[1]);
                var total = tag + untag;
                var tagPercent = parseFloat((parseFloat(tag / total)) * 100);
                var untagPercent = parseFloat((parseFloat(untag / total)) * 100);
                if (isNaN(tagPercent)) {
                    tagPercent = 0;
                }
                if (isNaN(untagPercent)) {
                    untagPercent = 0;
                }
                $("#totalRet").html(parseInt(array[0]) + parseInt(array[1]));
                $("#tagRet").html(array[0] + ' ('+tagPercent.toFixed(2)+'%)');
                $("#untagRet").html(array[1] + ' (' + untagPercent.toFixed(2) + '%)');

                if (tagPercent > 0) {
                    $("#tagRetExp").show();
                }
                else {
                    $("#tagRetExp").hide();
                }

                if (untagPercent > 0) {
                    $("#untagRetExp").show();
                }
                else {
                    $("#untagRetExp").hide();
                }
                
            },
            async: true
        });
    }

    $(document).ready(function () {

        function LoadDealers() {

            var RegionalHeadID = $("#regionalHead").val();
            try {
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID },
                    url: "@Url.Action("GetAllDealersListRelatedToRegionalHeadSelectOption", "Dealer")",
                    success: function (json) {

                        var $el = $("#dealer");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }

                });
            } catch (e) {
            }

        }

        function LoadSalesOfficer() {
            
            try {
                var RegionalHeadID = $("#regionalHead").val();
                //alert(RegionalHeadID);
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID },
                    url: "@Url.Action("GetAllSaleOfficerSelectOption", "Job")",
                    success: function (json) {

                        var $el = $("#saleOfficer");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.SaleOfficerID).text(key.SaleOfficerName));
                        });

                        if ($('#saleOfficer').val() != null) {
                            //$("#external-events").empty();
                            //LoadSOCities($('#SaleOfficerID').val());
                            GetPins();
                        }
                    }

                });
            } catch (e) {
                alert(e);
                //  $('#datatab').dataTable().fnDestroy();
            }

        }
        
        $("#liRetailer,#liRetailerMapView").addClass("active");

        var locations = [];
        var DealerID;
        var SaleOfficerID;
        var RegionalHeadID;
        var RegionID;
        var CityID;

        //GetPins();

        var myOptions = {
            center: new google.maps.LatLng(31.4265, 74.4538),
            zoom: 9,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("map"),
            myOptions);

        // Dealer
        $("#regionalHead").change(function () {
            LoadSalesOfficer();
            LoadDealers();
            

            // Get Dealer list related To Regional Head...

            @*$.ajax({
                type: "POST",
                data: { RegionalHeadID: $(this).val() },
                url: "@Url.Action("GetAllDealersListRelatedToRegionalHead", "Retailer")",
                success: function (json) {

                    var $el = $("#dealer");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option data-RegionalHeadID='" + key.RegionalHeadID + "'></option>")
                                .val(key.ID).text(key.Name));
                    });

                    $("#dealer").trigger('change');

                }

            });*@

        });


        // Dealer
        $("#dealer").change(function () {

            GetPins();

            /*locations = [];

            $.ajax({
                type: "POST",
                url: "Url.Action("GetRetailerLocationsByDealer", "Retailer")",
                dataType: 'json',
                data: { DealerID: $("#dealer").val() },
                success: function (json) {

                    locations = [];

                    $.each(json, function (value, key) {

                        var array = key.Location.split(",");
                        locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "");
                        //alert(locations);
                    });
                    //alert(locations);
                    var marker, i

                    var myOptions = {
                        center: new google.maps.LatLng(31.4265, 74.4538),
                        zoom: 9,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };

                    var map = new google.maps.Map(document.getElementById("map"),
                        myOptions);

                    for (i = 0; i < locations.length; i++) {
                        var array = locations[i].split(",");
                        var name = array[0]
                        var lat = array[1]
                        var long = array[2]
                        var add = array[3]

                        latlngset = new google.maps.LatLng(lat, long);

                        var marker = new google.maps.Marker({
                            map: map, title: name, position: latlngset,
                            animation: google.maps.Animation.DROP
                        });
                        map.setCenter(marker.getPosition())

                        var content = "(<b> " + name + " </b>)" + add;
                        var infowindow = new google.maps.InfoWindow()

                        google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                            return function () {
                                infowindow.setContent(content);
                                infowindow.open(map, marker);
                            };
                        })(marker, content, infowindow));

                    }




                },
                async: true
            });
            */

            // Get SaleOfficer list related To Dealers...

            @*$.ajax({
                type: "POST",
                data: { DealerID: $(this).val() },
                url: "@Url.Action("GetAllSaleOfficerListRelatedToDealer", "Job")",
                success: function (json) {

                    var $el = $("#saleOfficer");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option data-RegionalHeadID='" + key.RegionalHeadID + "'></option>")
                                .val(key.SaleOfficerID).text(key.SaleOfficerName));
                    });

                    $("#saleOfficer").trigger('change');

                }

            });*@

        });

        // Sales Officer
        $("#saleOfficer").change(function () {

            GetPins();
            /*
            locations = [];

            $.ajax({
                type: "POST",
                url: "Url.Action("GetRetailerLocationsBySaleOfficer", "Retailer")",
                dataType: 'json',
                data: { SaleOfficerID: $(this).val() },
                success: function (json) {

                    locations = [];

                    $.each(json, function (value, key) {

                        var array = key.Location.split(",");
                        locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "");
                        //alert(locations);
                    });
                    //alert(locations);
                    var marker, i

                    var myOptions = {
                        center: new google.maps.LatLng(31.4265, 74.4538),
                        zoom: 9,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };

                    var map = new google.maps.Map(document.getElementById("map"),
                        myOptions);

                    for (i = 0; i < locations.length; i++) {
                        var array = locations[i].split(",");
                        var name = array[0]
                        var lat = array[1]
                        var long = array[2]
                        var add = array[3]

                        latlngset = new google.maps.LatLng(lat, long);

                        var marker = new google.maps.Marker({
                            map: map, title: name, position: latlngset,
                            animation: google.maps.Animation.DROP
                        });
                        map.setCenter(marker.getPosition())

                        var content = "(<b> " + name + " </b>)" + add;
                        var infowindow = new google.maps.InfoWindow()

                        google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                            return function () {
                                infowindow.setContent(content);
                                infowindow.open(map, marker);
                            };
                        })(marker, content, infowindow));

                    }




                },
                async: true
            });
            
            */

            // Get Regions List Related to Regional Head...

            @*$.ajax({
                type: "POST",
                data: { SaleOfficerID: $(this).val(), RegionalHeadID: $('option:selected', this).attr("data-RegionalHeadID") },
                url: "@Url.Action("GetAllRegionsListRelatedToSaleOfficer", "Retailer")",
                success: function (json) {

                    var $el = $("#region");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option></option>")
                                .val(key.RegionID).text(key.Name));
                    });

                    $("#region").trigger("change");
                }
            });*@


        });

        // Region
        $("#region").change(function () {

            
            GetPins();

            /*
            locations = [];

            
            $.ajax({
                type: "POST",
                url: "Url.Action("GetRetailerLocationsByRegion", "Retailer")",
                dataType: 'json',
                data: { RegionID: $("#region").val() },
                success: function (json) {

                    locations = [];

                    $.each(json, function (value, key) {

                        var array = key.Location.split(",");
                        locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "");
                        //alert(locations);
                    });
                    //alert(locations);
                    var marker, i

                    var myOptions = {
                        center: new google.maps.LatLng(31.4265, 74.4538),
                        zoom: 9,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };

                    var map = new google.maps.Map(document.getElementById("map"),
                        myOptions);

                    for (i = 0; i < locations.length; i++) {
                        var array = locations[i].split(",");
                        var name = array[0]
                        var lat = array[1]
                        var long = array[2]
                        var add = array[3]

                        latlngset = new google.maps.LatLng(lat, long);

                        var marker = new google.maps.Marker({
                            map: map, title: name, position: latlngset,
                            animation: google.maps.Animation.DROP
                        });
                        map.setCenter(marker.getPosition())

                        var content = "(<b> " + name + " </b>)" + add;
                        var infowindow = new google.maps.InfoWindow()

                        google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                            return function () {
                                infowindow.setContent(content);
                                infowindow.open(map, marker);
                            };
                        })(marker, content, infowindow));

                    }




                },
                async: true
            });

            */

            // Get Regions List Related to Regional Head...

            @*$.ajax({
                type: "POST",
                data: { RegionID: $('option:selected', this).val() },
                url: "@Url.Action("GetAllCitiesListRelatedToRegion", "Retailer")",
                success: function (json) {

                    var $el = $("#city");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option></option>")
                                .val(key.ID).text(key.Name));
                    });

                    $("#city").trigger("change");
                }
            });*@

        });

        // City
        $("#city").change(function () {

            
            GetPins();

            /*
            locations = [];

            
            $.ajax({
                type: "POST",
                url: "Url.Action("GetRetailerLocationsByCity", "Retailer")",
                dataType: 'json',
                data: { CityID: $("#city").val() },
                success: function (json) {

                    locations = [];

                    $.each(json, function (value, key) {

                        var array = key.Location.split(",");
                        locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "");
                        //alert(locations);
                    });
                    //alert(locations);
                    var marker, i

                    var myOptions = {
                        center: new google.maps.LatLng(31.4265, 74.4538),
                        zoom: 9,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };

                    var map = new google.maps.Map(document.getElementById("map"),
                        myOptions);

                    for (i = 0; i < locations.length; i++) {
                        var array = locations[i].split(",");
                        var name = array[0]
                        var lat = array[1]
                        var long = array[2]
                        var add = array[3]

                        latlngset = new google.maps.LatLng(lat, long);

                        var marker = new google.maps.Marker({
                            map: map, title: name, position: latlngset,
                            animation: google.maps.Animation.DROP
                        });
                        map.setCenter(marker.getPosition())

                        var content = "(<b> " + name + " </b>)" + add;
                        var infowindow = new google.maps.InfoWindow()

                        google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                            return function () {
                                infowindow.setContent(content);
                                infowindow.open(map, marker);
                            };
                        })(marker, content, infowindow));

                    }




                },
                async: true
            });

            */
        });

        
            $("#zone").change(function () {


                GetPins();

            });

            $("#btnReset").on("click", function () {

                //alert(0);

            });

            @*$("#reset").on("click", function () {
                //InitialMapCall();
                GetPins();


                // Refresh Dealers
                $.ajax({
                    type: "POST",
                    data: {},
                    url: "@Url.Action("GetAllDealers", "Retailer")",
                    success: function (json) {
                        var $el = $("#dealer");
                        $el.empty(); // remove old options
                        $el.append("<option>Select Any</option>");
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }
                });

                // Refresh SalesOfficer
                $.ajax({
                    type: "POST",
                    data: {},
                    url: "@Url.Action("GetAllSalesOfficer", "Retailer")",
                    success: function (json) {

                        var $el = $("#saleOfficer");
                        $el.empty(); // remove old options
                        $el.append("<option>Select Any</option>");
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }

                });


                // Refresh Regions
                $.ajax({
                    type: "POST",
                    data: {},
                    url: "@Url.Action("GetAllRegions", "Retailer")",
                    success: function (json) {

                        var $el = $("#region");
                        $el.empty(); // remove old options
                        $el.append("<option>Select Any</option>");
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.RegionID).text(key.Name));
                        });
                    }

                });

                // Refresh Cities
                $.ajax({
                    type: "POST",
                    data: { DealerID: DealerID },
                    url: "@Url.Action("GetAllCities", "Retailer")",
                    success: function (json) {

                        var $el = $("#city");
                        $el.empty(); // remove old options
                        $el.append("<option>Select Any</option>");
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }

                });

            });*@


            //function InitialMapCall() {

                //GetPins();
                /*
                $.ajax({
                    type: "POST",
                    url: "Url.Action("GetRetailerLocations", "Retailer")",
                    dataType: 'json',
                    data: {},
                    success: function (json) {

                        locations = [];

                        $.each(json, function (value, key) {

                            var array = key.Location.split(",");
                            locations.push("" + key.ShopName + "," + array[0] + "," + array[1] + "," + key.Address + "");
                            //alert(locations);
                        });
                        //alert(locations);
                        var marker, i

                        var myOptions = {
                            center: new google.maps.LatLng(31.4265, 74.4538),
                            zoom: 9,
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };

                        var map = new google.maps.Map(document.getElementById("map"),
                            myOptions);

                        for (i = 0; i < locations.length; i++) {
                            var array = locations[i].split(",");
                            var name = array[0]
                            var lat = array[1]
                            var long = array[2]
                            var add = array[3]

                            latlngset = new google.maps.LatLng(lat, long);

                            var marker = new google.maps.Marker({
                                map: map, title: name, position: latlngset,
                                animation: google.maps.Animation.DROP
                            });
                            map.setCenter(marker.getPosition())

                            var content = "(<b> " + name + " </b>)" + add;
                            var infowindow = new google.maps.InfoWindow()

                            google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                                return function () {
                                    infowindow.setContent(content);
                                    infowindow.open(map, marker);
                                };
                            })(marker, content, infowindow));

                        }




                    },
                    async: true
                });
                */
            //}

    });

  </script>
