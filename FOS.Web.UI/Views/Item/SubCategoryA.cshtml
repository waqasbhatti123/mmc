@model FOS.Shared.SubCategoryA
@{
    ViewBag.Title = "Area";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN THEME CUSTOMIZER-->
        <!-- END THEME CUSTOMIZER-->
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li>
                <a href="#">Setup</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="#">Manage SubCategoryA</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
@using (Ajax.BeginForm("AddUpdateSubCategoryA", "Item", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green" style="">
                <div class="widget-title">
                    <h4>Manage SubCategoryA</h4>
                    <span class="tools">
                        @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                        @*<a href="javascript:;" class="icon-remove"></a>*@
                    </span>
                </div>
                <div class="widget-body">

                    <!-- BEGIN FORM-->
                    <!-- Select Region -->
                    <div class="control-group">
                        <label class="control-label">Main Category *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.MainCategoryID, new SelectList(Model.Regions, "ID", "MainCategoryName"), new { @class = "" })
                         
                        </div>
                    </div>

                    
                    <div class="control-group">
                        <label class="control-label">Sub Category *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.ID, new SelectList(Model.SubCategory, "ID", "SubName"), new { @class = "" })
                            @Html.ValidationMessageFor(model => model.ID)
                        </div>
                    </div>

                    <!-- Area Name -->
                    


                    <div class="control-group">
                        <label class="control-label">SubCategoryA Name *</label>
                        <div class="controls">
                            @Html.EditorFor(model => model.SubCategoryAName)
                            @Html.ValidationMessageFor(model => model.SubCategoryAName)
                            @Html.HiddenFor(model => model.SubCategoryAID)
                        </div>
                    </div>

                    <!-- Short Code -->
                 

                    <!-- Buttons -->
                    <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                        <div class="form-actions" style="padding-left:238px">
                            <button type="submit" id="btnNew" class="btn btn-primary">
                                <i class="icon-ok icon-white" style="padding-right:8px"></i><span id="create">Create</span>
                            </button>
                            <button type="button" id="btnRefresh" class="btn btn-info"><i class="icon-ban-circle icon-white" style="padding-right:8px"></i>Reset</button>
                        </div>
                    </div>

                    <!-- END FORM-->
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
    </div>
}
<!-- BEGIN EDITABLE TABLE widget-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">
            <div class="widget-title">
                <h4>View Detail</h4>
                <span class="tools">
                    @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                    @*<a href="javascript:;" class="icon-remove"></a>*@
                </span>
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        @*<div class="btn-group">
                                <button id="editable-sample_new" class="btn green">
                                    Add New <i class="icon-plus"></i>
                                </button>
                            </div>*@
                        <div class="btn-group pull-right"></div>
                    </div>
                    <div class="space15"></div>
                    <table class="table table-striped table-hover table-bordered" id="datatab" style="width: 100%;">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.SubCategoryAID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SubCategoryAName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ID)
                                </th>
                                <th style="width: 10% !important">Sr #</th>
                                <th style="width:40% !important">
                                    SubCategoryA Name
                                </th>

                                <th style="width:40% !important">
                                   MainCategory 
                                </th>
                                <th style="width:40% !important">
                                    SubCategory
                                </th>

                               
                                <th style="width:10% !important">Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<!-- END EDITABLE TABLE widget-->

<script>

    function GenerateDetailGrid() {

        //$('#datatab tfoot th').each(function () {
        //    $(this).html('<input type="text" />');
        //});
        var oTable = $('#datatab').DataTable({
            "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
            "iDisplayLength": 10,
            "paging": true,
            "pagingType": "full_numbers",
            "serverSide": true,
            "bRetrieve": true,
            "bDestroy": true,
            "autoWidth": true,
            "ajax": {
                "type": "POST",
                "url": '@Url.Action("SubCategoryADataHandler", "Item")',
                "contentType": 'application/json; charset=utf-8',
                'data': function (data) {
                    data.CityID = $('#MainCategoryID').val();
                    data.SubCat = $('#ID').val();
                    return data = JSON.stringify(data);

                },

            },
            "fnDrawCallback": function (osetting) {

                var UpdateCheck = "0";
                var DeleteCheck = "0";

                if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }
                else {
                    $(".edit").on("click", function () {

                        ClearForm();
                        debugger;
                       // $('#ID').val($(this).attr("data-id"));
                        $('#create').text('Update');
                        $("#SubCategoryAName").val($(this).attr("data-name"));
                        $("#SubCategoryAID").val($(this).attr("data-id"));
                        //$("#ItemPrice").val($(this).attr("data-shortcode"));
                        //$("#ItemCode").val($(this).attr("data-ItemId"));
                        $('html, body').animate({
                            scrollTop: $("#main-content").offset().top
                        }, 500);
                        $("#RegionID").focus();

                    });
                }

                if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".delete").css("display", "none"); }
                else {
                    $(".delete").on("click", function () {
                        debugger;
                       var AreaID = $(this).attr("data-id");
                        //var AreaID = $(".delete").attr("data-id");
                        // confirm dialog
                        alertify.confirm("Are You Sure You Want To Delete This Record ?  ", function (e) {
                            if (e) {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("DeleteSubCategoryA", "Item")",
                                        data: { areaID: AreaID },
                                        success: function (data) {

                                            if (data == "0") {
                                                alertify.success('Record Deleted Successfully');
                                                var table = $('#datatab').DataTable();
                                                table.row(this).remove().draw(false);
                                            }

                                            else { alertify.error('This Area Assign To Someone, First Delete That Then You Can Able To Delete This Area.'); }
                                        }

                                    });

                                } else { }
                            });

                        });
                    }
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    $("td:first", nRow).html(iDisplayIndex + 1);
                    return nRow;
                },
                "oLanguage": { "sSearch": "Search Items : " },
                "sDom": 'lftipr',
                "processing": true,
                "deferRender": true,
                "bSelect": true,
                "columns": [
              
               { "data": "ID", "bVisible": false },
               { "data": "ID", "bVisible": false },
               { "data": "SubCategoryAName", "bSortable": false },
               { "data": "SubCategoryAID", "bVisible": false },
               { "data": "SubCategoryAName" },
               { "data": "MainCatName" },
               { "data": "SubCatName" },
               {
                   "sClass": "center-align-td",
                   "mData": null,
                   "bSortable": false,
                   "mRender": function (data, type, row) {
                       //alert('<button class="btn btn-success edit" data-id=' + row.SubCategoryAID + '  data-name=' + '"' + row.SubCategoryAName + '"' + 'data-ItemId=' + row.ItemCode + ' data-cityid=' + row.CityID + ' data-shortcode=' + row.price + '>' + '<i class=icon-pencil></i>' + '</button>&nbsp;<button class="btn btn-info delete" data-id=' + row.ItemId + '>' + '<i class=icon-trash></i>' + '</button>');
                       return '<button class="btn btn-success edit" data-id=' + row.SubCategoryAID + '  data-name=' + '"' + row.SubCategoryAName + '"' + 'data-ItemId=' + row.ItemCode + ' data-cityid=' + row.CityID + ' data-shortcode=' + row.price + '>' + '<i class=icon-pencil></i>' + '</button>&nbsp;<button class="btn btn-info delete" data-id=' + row.SubCategoryAID + '>' + '<i class=icon-trash></i>' + '</button>';
                   }
               }
                ],
                "order": [4, "asc"]

            });

        }

        function LoadCities() {
            try {
                debugger;
                var regionID = $("#MainCategoryID").val();

                $.ajax({
                    type: "POST",
                    data: { regionID: regionID },
                    url: "@Url.Action("GetSubCatByID", "Item")",
                    dataType: 'json',
                    success: function (json) {

                        var $el = $("#ID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {

                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.SubName));
                        });

                        if ($('#ID').val() != null) {
                            $('#datatab').dataTable().fnDestroy();
                            GenerateDetailGrid();
                        }
                        else {
                            $('#datatab').dataTable().empty();
                        }

                    }

                });
            } catch (e) {
                alert(e);
                $('#datatab').dataTable().fnDestroy();
            }

        }

        $(document).ready(function () {

            $("#liSetup,#liArea").addClass("active");

            var WriteCheck = "0";

            if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }

            $("#MainCategoryID").change(function () {
                //GenerateDetailGrid();
                LoadCities();
             
        });




            $("#ID").change(function () {
          
            $('#datatab').dataTable().fnDestroy();
            if ($('#ID').val() != null) {
                GenerateDetailGrid();
            }
            else {
                var table = $('#datatab').DataTable();

                table
                    .clear()
                    .draw();
            }

        });

        $("#btnRefresh").click(function () {
            ClearForm();
        });
        GenerateDetailGrid();

        $("#ShortCode").bind('keyup', function (e) {
            if (e.which >= 97 && e.which <= 122) {
                var newKey = e.which - 32;
                // I have tried setting those
                e.keyCode = newKey;
                e.charCode = newKey;
            }

            $("#ShortCode").val(($("#ShortCode").val()).toUpperCase());
        });

    });

</script>
<script type="text/javascript">



        function ClearForm() {
            $('#ItemCode').val('');
            $('#SubCategoryAName').val('');
            $('#price').val(0);
            $('#create').text('Create');
        }

        function OnSuccess(response) {
            if (response == "1") {
                alertify.success("Area Saved Successfully");
                $('#create').text('Create');
                var dt = $('#datatab').DataTable();
                dt.ajax.reload();
                ClearForm();
            }
            else if (response == "0") {
                alertify.error("Unable To Save Area.");
            }
            else if (response == "2") {
                alertify.error("Area Code Already Exist");
            }
            else {
                alertify.error(response);
            }

        }

        function OnFailure(response) {
            if (response.status == 422) {
                var errors = JSON.parse(response.responseText);
                alertify.error(errors.errors);
            }
            else {
                alertify.error(response);
            }
        }
</script>