@model FOS.Shared.JobsData

@{
    ViewBag.Title = "Jobs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN THEME CUSTOMIZER-->

        <!-- END THEME CUSTOMIZER-->
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li>
                <a href="#">Jobs</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="#">Manage Jobs</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>


@using (Ajax.BeginForm("AddUpdateJob", "Job", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal", id = "myForm" }))
{
        
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span5">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green">
                <div class="widget-title">
                    <h4>Manage Jobs</h4>
                    <span class="tools">
                        @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                        @*<a href="javascript:;" class="icon-remove"></a>*@
                    </span>
                </div>
                <div class="widget-body" style="min-height: 498px;">

                    <div style="float: left">

                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Job Title *</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.JobTitle, new { @class = "", @style = "", name = "JobTitle" })
                            </div>
                        </div>

                        <div class="control-group">
                                <label class="control-label">Type</label>
                                <div class="controls">
                                    @Html.HiddenFor(model => model.Type)
                                    <select id="Type" name="Type" disabled>
                                        <option value="1">Territorial Head</option>
                                    </select>
                                </div>
                            </div>

                        <!-- Select Regional Head -->
                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Select Head *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.RegionalHeadID, new SelectList(Model.RegionalHead, "ID", "Name"), new { @class = "" })
                                @Html.ValidationMessageFor(model => model.RegionalHeadID)
                            </div>
                        </div>

                        <!-- Select Sale Officer -->
                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Sales Officer *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.SaleOfficerID, new SelectList(Model.SaleOfficer, "ID", "Name"), new { @class = "" })
                                @Html.ValidationMessageFor(model => model.SaleOfficerID)
                                @Html.HiddenFor(model => model.ID)
                            </div>
                        </div>

                        <div id="THDiv">

                            <!-- Visit Type -->
                            <div class="control-group" style="margin-bottom: 14px;">
                                <label class="control-label">Visit Type *</label>
                                <div class="controls" style="margin-top: 4px;">
                                    @Html.RadioButton("VisitType", "Shop", new { @checked = true, @style = "margin-top: 0px;" })   <span style="margin-right: 46px; margin-top: 2px">Shop</span>
                                    @Html.RadioButton("VisitType", "Painter", new { @style = "margin-top: 0px;" })   <span style="margin-top: 2px">Painter</span>

                                </div>
                            </div>
                            <div id="RetailerTypeDiv">
                                <!-- Retailer Type -->
                                <div class="control-group" style="margin-bottom: 14px;">
                                    <label class="control-label">Retailer Type *</label>
                                    <div class="controls" style="margin-top: 4px;">
                                        @Html.RadioButton("RetailerType", "Regular", new { @style = "margin-top: 0px;" })   <span style="margin-top: 2px;margin-right: 29px;">Regular</span>
                                        @Html.RadioButton("RetailerType", "Focused", new { @checked = true, @style = "margin-top: 0px;" })   <span style=" margin-top: 2px">Focused</span>                                       
                                    </div>
                                </div>
                            </div>
                        </div>

                        
                        <!-- Select Visit Type -->
                        <div class="control-group" style="margin-bottom: 14px;">
                            <label class="control-label">Visit Plan *</label>
                            <div class="controls">
                                <input type="text" disabled value="Monthly" />
                                @Html.ValidationMessageFor(model => model.VisitPlanID)
                            </div>
                        </div>

                        <div class="control-group" style="margin-bottom: 14px;" id="startingDateDiv">
                            <label class="control-label">Starting Job Date</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.StartingDate, new { @class = "", @style = "", name = "startDate" })
                            </div>
                        </div>

                        <!-- Buttons -->
                        <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                            <div class="form-actions" style="padding-left: 238px;">
                                <button type="submit" id="btnNew" class="btn btn-primary">
                                    <i class="icon-ok icon-white" style="padding-right: 8px"></i><span id="create">Create</span>
                                </button>
                                <button type="button" id="btnRefresh" class="btn btn-info"><i class="icon-ban-circle icon-white" style="padding-right: 8px"></i>Reset</button>
                            </div>
                        </div>

                    </div>

                    <!-- END FORM-->
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->




        </div>

        <div class="span7">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green">
                <div class="widget-title">
                    <h4>Selected Sales Officer Retailers List</h4>
                </div>
                <div class="widget-body" style="height: 498px; overflow: scroll;">
                    
                    @Html.HiddenFor(model => model.SelectedPainters)
                    @Html.HiddenFor(model => model.SelectedRetailers)
                    @Html.HiddenFor(model => model.SelectedDealers)
                    
                    <div style="float: left; width: 99%;">
                        <div id="retailers" class="" style="width: 108%; height: 440px;"></div>
                    </div>
                    <!-- END FORM-->
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>

    </div>
}

<!-- BEGIN EDITABLE TABLE widget-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">
            <div class="widget-title">
                <h4>View Detail</h4>
                <span class="tools">
                    @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                    @*<a href="javascript:;" class="icon-remove"></a>*@
                </span>
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        @*<div class="btn-group">
                                    <button id="editable-sample_new" class="btn green">
                                        Add New <i class="icon-plus"></i>
                                    </button>
                                </div>*@
                        <div class="btn-group pull-right"></div>
                    </div>
                    <div class="space15"></div>
                    <table class="table table-striped table-hover table-bordered" style="width: 100%;" id="datatab">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.ID)</th>
                                <th>@Html.DisplayNameFor(model => model.RegionalHeadID)</th>
                                <th>@Html.DisplayNameFor(model => model.SaleOfficerID)</th>

                                <th style="width: 10% !important">Sr #</th>
                                <th style="width: 16% !important">Job Title 
                                </th>
                                <th style="width: 16% !important">Regional Head
                                </th>

                                <th style="width: 16% !important">Sales Officer
                                </th>

                                <th style="width: 16% !important">Visit Type
                                </th>

                                <th style="width: 16% !important">Assigned On
                                </th>

                                <th style="width: 16% !important">Actions</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<!-- END EDITABLE TABLE widget-->

<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

<script>
    var a = [];
    var b = [];

    $(function () {
        $('#myForm').submit(function () {

            $("#Type").val("1");

            if ($('input[type=radio][name=VisitType]:checked').val() == "Shop") {
                $("#SelectedRetailers").val(a);
                $("#SelectedDealers").val(b);
                $("#SelectedPainters").val("");
            }
            else {
                $("#SelectedPainters").val(a);
                $("#SelectedRetailers").val("");
                $("#SelectedDealers").val("");
            }

            $('#ID').focusin();
            if ($('#VisitPlanID').val() == 1){
            }
            else if ($('#VisitPlanID').val() == 2) {
                if ($("#VisitPlanWeeklyDays").val() == "0") {
                    alertify.error("Please Select A Day");
                    return false;
                }
            }
            else if ($('#VisitPlanID').val() == 3) {
            }

            if ($('#JobTitle').val() == "" || $('#JobTitle').val() == null) {

                alertify.error("Please Enter Job Title");
                return false;

            }

        });
    });

    function GenerateDetailGrid() {

        var oTable = $('#datatab').DataTable({
            "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
            "iDisplayLength": 10,
            "paging": true,
            "pagingType": "full_numbers",
            "serverSide": true,
            "bRetrieve": true,
            "bDestroy": true,
            "autoWidth": true,
            "bRestore": true,
            "ajax": {
                "type": "POST",
                "contentType": "application/json; charset=utf-8",
                "dataType": "json",
                "url": '@Url.Action("JobDataHandler", "Job")',
                'data': function (data) {
                    data.RegionalHeadID = $('#RegionalHeadID').val();
                    data.SaleOfficerID = $('#SaleOfficerID').val();
                    return data = JSON.stringify(data);
                },
            },
            "fnDrawCallback": function (osetting) {

                var UpdateCheck = "0";
                var DeleteCheck = "0";

                if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }
                else {
                    $(".edit").on("click", function () {

                        $('#ID').val($(this).attr("data-id"));
                        $('#JobTitle').val($(this).attr("data-jobtitle"));
                        $('#create').text('Update');
                        $("#SaleOfficerID").val($(this).attr("data-saleofficerid"));
                        $("#RegionalHeadID").val($(this).attr("data-regionalheadid"));
                        $("#ContactPerson").val($(this).attr("data-contactperson"));
                        $("#B2BVisitAddress").val($(this).attr("data-visitaddress"));

                        $("#Description").val($(this).attr("data-description"));
                        $('#VisitPlanID').val($(this).attr("data-visitplantype"));

                        $("#StartingDate").val($(this).attr("data-startingdate"));
                       
                        if ($(this).attr("data-visittype") == "Shop") {
                            $("input[name=VisitType][value='Shop']").prop("checked", true).trigger("click");

                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("LoadRetailersEdit", "Job")",
                                data: { JobID: $(this).attr("data-id"), RegionalHeadID: $(this).attr("data-regionalheadid"), SaleOfficerID: $(this).attr("data-saleofficerid"), RetailerType: $(this).attr("data-retailertype") },
                                success: function (json) {

                                    if (json != null) {

                                        var $el = $("#retailers");
                                        $el.empty();
                                        $("#retailers").append(json.Response);

                                        a = [];
                                        b = [];

                                        $.each(json.EditRetailer, function (value, key) {
                                            if (key.RetailerJobStatus == true) {
                                                $("#retailer" + key.ID + "").attr("checked", true);
                                                a.push(key.ID);
                                                console.log(key.ID);
                                                b.push(key.DealerID);
                                            }
                                            else {
                                                $("#retailer" + key.ID + "").attr("checked", false);
                                            }
                                        });
                                    }
                                    else { alertify.success('All Retailers Assigned To Jobs.'); }
                                }
                            });
                            $("#RetailerTypeDiv").show();
                        }
                        else if ($(this).attr("data-visittype") == "Painter") {
                            $("input[name=VisitType][value='Painter']").prop("checked", true).trigger("click");
                            LoadPaintersEdit($(this).attr("data-saleofficerid"), $(this).attr("data-id"));
                            $("#RetailerTypeDiv").hide();
                        }
                        else { }

                        if ($(this).attr("data-retailertype") == "Regular") {
                            $("input[name=RetailerType][value='Regular']").prop("checked", true).trigger("click");
                        }
                        else if ($(this).attr("data-retailertype") == "Focused") {
                            $("input[name=RetailerType][value='Focused']").prop("checked", true).trigger("click");
                        }
                        else { }

                        $("#VisitPlanHiddenID").val($(this).attr("data-visitplantype"));

                        var arr = $(this).attr("data-visitplandays").split(',');

                        $('html, body').animate({
                            scrollTop: $("#main-content").offset().top
                        }, 500);

                        $('#VisitPlanID').attr('disabled', true);

                        $('html, body').animate({
                            scrollTop: $("#main-content").offset().top
                        }, 500);

                    });
                }

                if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".delete").css("display", "none"); }
                else {
                    $(".delete").on("click", function () {
                        var JobID = $(this).attr("data-id");
                        alertify.confirm("Are You Sure You Want To Delete This Job ?  ", function (e) {
                            if (e) {
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("DeleteJob", "Job")",
                                    data: { JobID: JobID },
                                    success: function (data) {
                                        if (data == "0") {
                                            alertify.success('Record Deleted Successfully');
                                            var table = $('#datatab').DataTable();
                                            table.row(this).remove().draw(false);
                                        }
                                        else { alertify.error('An Error Occured, Try Again.'); }
                                    }
                                });
                            } else { }
                        });
                    });
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
            "oLanguage": { "sSearch": "Search jobs : " },
            "sDom": 'lftipr',
            "processing": true,
            "deferRender": true,
            "bSelect": true,
            "columns": [
           { "data": "ID", "bVisible": false },
           { "data": "RegionalHeadID", "bVisible": false },
           { "data": "SaleOfficerID", "bVisible": false },
           { "data": "ID" },
           { "data": "JobTitle" },
           { "data": "RegionalHeadName" },
           { "data": "SaleOfficerName" },
           { "data": "VisitPlanName" },
           { "data": "DateOfAssign" },
           {
               "sClass": "center-align-td",
               "mData": null,
               "bSortable": false,
               "mRender": function (data, type, row) {
                   return '<button class="btn btn-success edit" data-id=' + '"' + row.ID + '" data-jobtitle=' + '"' + row.JobTitle + '"' + '  data-saleofficerid=' + '"' + row.SaleOfficerID + '"' + ' data-regionalheadid=' + '"' + row.RegionalHeadID + '"' + ' data-jobno=' + '"' + row.JobNo + '"' + ' data-visittype=' + '"' + row.VisitType + '"' + '  data-visitplantype=' + '"' + row.VisitPlanID + '"' + 'data-startingdate=' + '"' + row.StartingDate + '"' + 'data-visitplandays=' + '"' + row.VisitPlanDays + '"' + ' data-retailertype=' + '"' + row.RetailerType + '"' + ' data-contactperson=' + '"' + row.ContactPerson + '"' + ' data-visitaddress=' + '"' + row.B2BVisitAddress + '"' + ' data-description=' + '"' + row.Description + '"' + ' ><i class=icon-pencil></i></button>&nbsp;<button class="btn btn-info delete" data-id=' + '"' + row.ID + '"' + '><i class=icon-trash></i></button>';
               }
           }], "order": [0, "asc"]

        });

    }


    function LoadRegionalHead(RegionalHeadType) {
        $.ajax({
            type: "POST",
            data: { RegionalHeadType: RegionalHeadType },
            url: "@Url.Action("GetRegionalHeadAccordingToType", "SaleOfficer")",
            dataType: 'json',
            success: function (json) {

                var $el = $("#RegionalHeadID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {

                    $el.append($("<option></option>")
                            .attr("value", key.ID).text(key.Name));
                });
                $("#RegionalHeadID").trigger("change");
            }
        });
    }

    function LoadPaintersEdit(SOID, JobID) {
        try {
            $.ajax({
                type: "POST",
                data: { JobID: JobID, SOID: SOID },
                url: "@Url.Action("LoadPaintersEdit", "Job")",
                success: function (json) {

                    var $el = $("#retailers");
                    $el.empty();
                    $("#retailers").append(json.Response);

                    a = [];
                    for (i = 0 ; i < json.PainterIDs.length ; i++) {
                        a.push(json.PainterIDs[i]);
                    }
                    $.each(json.Response, function (value, key) {
                        if (key.Selected == true) {
                            $("#retailer" + key.ID + "").attr("checked", true);
                        }
                        else { $("#retailer" + key.ID + "").attr("checked", false); }
                    });

                },
                beforeSend: function () {
                    $("#progress").show();
                },
                complete: function () {
                    $("#progress").hide();
                },
                error: function () {
                    alertify.error("Server Is not Responding.");
                }
            });
        }
        catch (e) {
            alert(e);
        }
    }

    $(document).ready(function () {
        var disableddates = ["29-04-2017", "30-04-2017", "31-04-2017"];

        $('input[name=StartingDate]').css({ "height": "22px", "width": "202px", "margin-bottom": "0px" });
        $("input[name=StartingDate]").datepicker({
            dateFormat: "dd-MM-yy",
            beforeShowDay: function (date) {

                if (date.getDate() >= 1 && date.getDate() <= 28) {
                    return [true, ''];
                }
                return [false, ''];
            }
        });
        $("input[name=StartingDate]").trigger('change')

        

        function DisableSpecificDates(date) {

            var m = date.getMonth();
            var d = date.getDate();
            var y = date.getFullYear();

            // First convert the date in to the mm-dd-yyyy format 
            // Take note that we will increment the month count by 1 
            var currentdate = (m + 1) + '-' + d + '-' + y;

            // We will now check if the date belongs to disableddates array 
            for (var i = 0; i < disableddates.length; i++) {

                // Now check if the current date is in disabled dates array. 
                if ($.inArray(currentdate, disableddates) != -1) {
                    return [false];
                }
            }

        }


        $("#Type").val("1");
        $("#PaintersCity").hide();
        $("#B2BDiv").hide();

        var WriteCheck = "0";

        if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }


        $("#Type").change(function () {

            if ($(this).val() == 1) {
                LoadRegionalHead($(this).val());
                $("#THDiv").show();
                $("#B2BDiv").hide();
            }
            else {
                LoadRegionalHead($(this).val());
                $("#THDiv").hide();
                $("#B2BDiv").show();
                $("#PaintersCity").hide();
            }

        });

        $('input[type=radio][name=RetailerType]').change(function () {
            LoadRetailers($(this).val());
        });

        $('input[type=radio][name=VisitType]').change(function () {
            if ($(this).val() == "Shop") {
                var $el = $("#retailers");
                $el.empty(); // remove old options
                $("input[name=RetailerType][value='Regular']").prop("checked", false)
                $("input[name=RetailerType][value='Focused']").prop("checked", false)
                $("#RetailerTypeDiv").show();
                $("#PaintersCity").hide();
            }
            else {
                var $el = $("#retailers");
                $el.empty(); // remove old options
                $("#RetailerTypeDiv").hide();
                $("#PaintersCity").show();
                LoadPainters($("#SaleOfficerID").val());
            }

        });

        function LoadPainters(SOID) {
            try {
                $.ajax({
                    type: "POST",
                    data: { SOID: SOID },
                    url: "@Url.Action("LoadPainters", "Job")",
                    success: function (json) {
                        var $el = $("#retailers");
                        $el.empty(); // remove old options
                        $("#retailers").append(json.Response);
                    },
                    beforeSend: function () {
                        $("#progress").show();
                    },
                    complete: function () {
                        $("#progress").hide();
                    },
                    error: function () {
                        alertify.error("Server Is not Responding.");
                    }
                });
            } catch (e) {
                alert(e);
            }
        }



        $("#liJob,#liManageJobs").addClass("active");

        function setRadio(id) {
            var radio = $('#' + id);
            radio[0].checked = true;
            radio.button("refresh");
        }

        function LoadRetailers(RetailerType) {
            try {
                var SaleOfficerID = $("#SaleOfficerID").val();
                var RegionalHeadID = $("#RegionalHeadID").val();

                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID, SaleOfficerID: SaleOfficerID, RetailerType: RetailerType },
                    url: "@Url.Action("LoadRetailers", "Job")",
                    success: function (json) {
                        var $el = $("#retailers");
                        $el.empty();
                        $("#retailers").append(json.Response);
                        $('#datatab').DataTable().ajax.reload();
                    }
                });
            } catch (e) {
                alert(e);
            }
        }

        function LoadSalesOfficer() {
            try {
                var RegionalHeadID = $("#RegionalHeadID").val();
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID },
                    url: "@Url.Action("GetAllSaleOfficerListRelatedToDealer", "Job")",
                    success: function (json) {
                        var $el = $("#SaleOfficerID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                    .val(key.SaleOfficerID).text(key.SaleOfficerName));
                        });

                        if ($('#SaleOfficerID').val() != null) {
                            $("#retailers").empty();
                        }
                    }
                });
            } catch (e) {
                alert(e);
            }
        }

        $("#RegionalHeadID").change(function () {
            LoadSalesOfficer();
            $("input[name=VisitType][value='Shop']").prop("checked", false)
            $("input[name=VisitType][value='Painter']").prop("checked", false)
            $("input[name=RetailerType][value='Regular']").prop("checked", false)
            $("input[name=RetailerType][value='Focused']").prop("checked", false)
            $("#RetailerTypeDiv").hide();
        });

        $("#SaleOfficerID").change(function () {
            LoadRetailerAccordingToSalesOfficer();
            $("input[name=VisitType][value='Shop']").prop("checked", false)
            $("input[name=VisitType][value='Painter']").prop("checked", false)
            $("input[name=RetailerType][value='Regular']").prop("checked", false)
            $("input[name=RetailerType][value='Focused']").prop("checked", false)
            $("#RetailerTypeDiv").hide();


            $('#datatab').dataTable().fnDestroy();
            if ($(this).val() != null) {
                GenerateDetailGrid();
            }
            else {
                var table = $('#datatab').DataTable();
                table
                    .clear()
                    .draw();
            }


        });

        function LoadRetailerAccordingToSalesOfficer() {
            try {
                var SaleOfficerID = $("#SaleOfficerID").val();
                var RegionalHeadID = $("#RegionalHeadID").val();
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID, SaleOfficerID: SaleOfficerID },
                    url: "@Url.Action("LoadRetailers", "Job")",
                    success: function (json) {
                        var $el = $("#retailers");
                        $el.empty();
                    }
                });
            } catch (e) {
                alert(e);
            }
        }


        function LoadCitiesAndAreas(SOID) {
            try {
                var RegionalHeadID = $("#RegionalHeadID").val();
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID, SaleOfficerID: SOID, RetailerType: $("#Type").val() },
                    url: "@Url.Action("LoadCitiesAndAreas", "Job")",
                    success: function (json) {
                        var $el = $("#retailers");
                        $el.empty(); 
                        $("#retailers").append(json.Response);
                        $('#datatab').DataTable().ajax.reload();
                    }
                });
            } catch (e) {
                alert(e);
            }
        }

        $("#btnRefresh").click(function () {
            ClearForm();
        });

        GenerateDetailGrid();

        $("#btnRefresh").trigger('click');
    });


    function RefreshTable(tableId, urlData) {
        $.getJSON(urlData, null, function (json) {
            table = $(tableId).dataTable();
            oSettings = table.fnSettings();

            table.fnClearTable(this);

            for (var i = 0; i < json.aaData.length; i++) {
                table.oApi._fnAddData(oSettings, json.aaData[i]);
            }

            oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
            table.fnDraw();
        });
    }

    function ClearForm() {

        a = [];
        b = [];
        $('#ID').val(0);
        $('#JobTitle').val('');
        $('#JobNo').val('');
        $('#VisitPlanID').val(1);
        $('#VisitPlanID').trigger("chosen:update");
        $("#VisitPlanID").trigger("change");
        $('#create').text('Create');
        //$('#retailers').empty();
        
        $("#SaleOfficerID").trigger("change");
        $("#SaleOfficerID").trigger("chosen:update");

        $('#VisitPlanWeeklyDays').val("0");
        $('#VisitPlanWeeklyDays').trigger("chosen:update");

        $("#days").css("display", "none");

        //$("input[type=radio][name=RetailerType]").attr('disabled', false);

       

        $("#StartingDate").val("");
        $("#SelectedRetailers").val("");
        $("#SelectedPainters").val("");
        $("#SelectedDealers").val("");
        $("#ContactPerson").val("");
        $("#B2BVisitAddress").val("");
        $("#Description").val("");
        $('#VisitPlanID').attr('disabled', false);
        //$("input[name=VisitType][value='Shop']").prop("checked", true)
        //$("input[name=RetailerType][value='Regular']").prop("checked", true)
        $("input[name=VisitType][value='Shop']").prop("checked", false)
        $("input[name=VisitType][value='Painter']").prop("checked", false)
        $("input[name=RetailerType][value='Regular']").prop("checked", false)
        $("input[name=RetailerType][value='Focused']").prop("checked", false)
    }

    function dateFormatter(date) {
        var d = date;

        var month = d.getMonth() + 1;
        var day = d.getDate();

        var output = (('' + day).length < 2 ? '0' : '') + day + '-' + (('' + month).length < 2 ? '0' : '') + month + '-' + d.getFullYear();
        return output;
    }

    function OnSuccess(response) {
        if (response == "1") {
            alertify.success("Job Saved Successfully");
            $('#create').text('Create');
            var dt = $('#datatab').DataTable();
            dt.ajax.reload();
            ClearForm();
        }
        else if (response == "2") {
            alertify.error("Please Select Any Retailer For Job");
        }
        else if (response == "3") {
            alertify.error("Please Select Any Painter For Job");
        }
        else if (response == "0") {
            alertify.error("Unable To Save Job.");
        }
        else {
            alertify.error(response);
        }

    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }

    $(document).ajaxComplete(function () {

        $("input[name='retailer[]']").bind().change(function () {

            a = [];
            b = [];

            $("input[name='retailer[]']").each(function () {

                if ($(this).is(":checked")) {
                    a.push($(this).attr('data-id'));
                }

            });

            $("input[name='retailer[]']").each(function () {

                if ($(this).is(":checked")) {
                    b.push($(this).attr('data-dealerid'));
                }

            });


        });

    });


</script>

