@model FOS.Shared.ReportsInputData


@{
    ViewBag.Title = "Painter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="~/Scripts/jquery.sumoselect.js" type="text/javascript"></script>
<link href="~/Content/dropdownliststyle.css" rel="stylesheet" type="text/css" />
<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">

        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li><a href="#">Painter</a>
            <span class="divider">/</span>
            </li>
            <li>
                <a href="#">Manage Painters</a>
            </li>
        </ul>
    </div>
</div>
<!-- END PAGE HEADER-->

@*@using (Ajax.BeginForm("AddUpdateRetailerPaintersAssociation", "painter", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row-fluid">

        <div class="span5">
            <div class="widget green">
                <div class="widget-title">
                    <h4>Manage Painter</h4>
                    <span class="tools"></span>
                </div>
                <div class="widget-body" style="height: 440px;">


                    <div class="control-group">
                        <label class="control-label">Type</label>
                        <div class="controls">
                            <select id="Type" name="Type" disabled>
                                <option value="1">Territorial Head</option>
                            </select>
                        </div>
                    </div>


                    <!-- Select RegionalHead -->
                    <div class="control-group">
                        <label class="control-label">Select Head *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.TID, new SelectList(Model.Territories, "ID", "TeritoryName"), new {@multiple="multiple", @class = "SlectBox" })
                            @*@Html.DropDownListFor(x => x.TID , Model.Territories, "---Select ---", new {@class = "", @style = "width:150px; background-color:white" })*@
                            @*@Html.ValidationMessageFor(model => model.RegionalHeadID)
                            @Html.HiddenFor(model => model.HiddenRegionalHeadID)*@
                        </div>
                    </div>

                    <!-- Select Sale Officer -->
                    @*<div class="control-group">
                        <label class="control-label">Sales Officer *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.SaleOfficerID, new SelectList(Model.SalesOfficer, "ID", "Name"), new { @class = "" })
                            @Html.ValidationMessageFor(model => model.SaleOfficerID)
                            @Html.HiddenFor(model => model.ID)
                        </div>
                    </div>

                    <!-- Select Sale Officer -->
                    <div class="control-group">
                        <label class="control-label">Retailers *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.RetailerID, new SelectList(Model.Retailers, "ID", "Name"), new { @class = "" })
                            @Html.ValidationMessageFor(model => model.RetailerID)

                        </div>
                    </div>*@

                    <div class="control-group">
                        <div class="form-actions" style="padding-left: 238px;">
                            <button type="button" id="btnNew" value="Create" class="btn btn-primary">
                                <i class="icon-ok icon-white" style="padding-right: 8px"></i><span id="create">Create</span>
                            </button>
                            <button type="button" id="btnRefresh" class="btn btn-info"><i class="icon-ban-circle icon-white" style="padding-right: 8px"></i>Reset</button>
                        </div>
                    </div>



                </div>
            </div>
        </div>

        <div class="span7">
            <div class="widget green">
                <div class="widget-title">
                    <h4 >Painters List</h4>
                    <h4 style="float: right;font-weight: 600;">Total Painters: <span  style="font-weight: 300;" id="totalpainters"></span></h4>
                    <h4 style="float: right;font-weight: 600;border-right: 1px solid;border-left: 1px solid;">Cities: <span  style="font-weight: 300;" id="cities"></span></h4>
                </div>
                <div class="widget-body" style="padding: 10px; height: 450px; overflow: scroll; background-color: #ebffdf;">
                    <div id="progress" style="display: none; position: absolute; margin-top: 180px; margin-left: 245px;">
                        <h3>Loading . . . </h3>
                    </div>
                    @*@Html.HiddenFor(model => model.SelectedPainters)*@
                    
                     <div class="control-group">
                        <label class="control-label" style="width: 45px;">Cities</label>
                         <div class="controls" style="margin-left: 50px;">
                             @*@Html.DropDownListFor(model => model.PainterCityID, new SelectList(Model.PainterCityNames, "ID", "CityName"), new { @class = "" })
                             @Html.HiddenFor(model => model.City)*@
                         </div>
                      </div>
                    <hr />
                    <div id="painters" class="" style="width: 108%; height: 440px;"></div>
                </div>
            </div>

        </div>

    </div>
                    
}



<script src="~/Scripts/js/sugar.min.js"></script>

<script>

    $('#btnNew').click(function () {
        var selected = $("#TID option:selected");
        var message = "";
        selected.each(function () {
            // message += $(this).text() + " " + $(this).val() + "\n";
            message += $(this).val() + ",";
        });
        alert(message);
        $.ajax({
            url: '@Url.Action("getData", "Painter")',
            type: "post",
            dataType: 'json',
            data: {
                cities: message
            },
            success: function (data) {
                alert("success");
            },
            error: function (jxhr) {
                alert("error");
                if (typeof console != 'undefined') {
                    console.log(jxhr.responseText);
                }
            }
        });
    });
    //var a = [];
    var sPainters = [];

    function painterSelected(obj) {

      
        var painterID = $(obj).attr("data-id");
        var i = findPainter(sPainters, painterID);

        if (obj.checked && i == -1)
        {
            sPainters.push(painterID);
        }

        if (!obj.checked && i > -1)
        {
            sPainters.splice(i,1); //('"'+painterID+'"');
        }
        console.log(sPainters);
    }

    function findPainter(arr, val)
    {
        for (i = 0; i < arr.length ; i++)
        {
            if (arr[i] == val)
            {
                return i;
            }
        }
        return -1;
    }

    $(function () {
        $('#form0').submit(function () {

            $("#City").val($("#PainterCityID").find("option:selected").text());
            $("#SelectedPainters").val(sPainters);
        });

        


        //$(".pCheckBox input[name='painter[]']").bind().change(function () {
        //    alert(this.attr("data-id"));
        //});


    });

@*    function GenerateDetailGrid() {



        var oTable = $('#datatab').DataTable({
            "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
            "iDisplayLength": 10,
            "paging": true,
            "pagingType": "full_numbers",
            "serverSide": true,
            "bRetrieve": true,
            "bDestroy": true,
            "autoWidth": true,
            "ajax": {
                "type": "POST",
                "url": '@Url.Action("DataHandler", "Painter")',
                "contentType": 'application/json; charset=utf-8',
                'data': function (data) {
                    data.RegionalHeadID = $('#RegionalHeadID').val() == null ? 1 : $('#RegionalHeadID').val();
                    data.SaleOfficerID = $('#SaleOfficerID').val() == null ? 1 : $('#SaleOfficerID').val();
                    return data = JSON.stringify(data);
                },

            },
            "fnDrawCallback": function (osetting) {

                var UpdateCheck = "0";
                var DeleteCheck = "0";

                if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }
                else {
                    $(".edit").on("click", function () {

                        //ClearForm();

                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("LoadPaintersEdit", "Painter")",
                            data: {RegionalHeadID: $(this).attr("data-regionalheadid"), SaleOfficerID: $(this).attr("data-saleofficerid"), RetailerID: $(this).attr("data-retailerid"), CityName: $(this).attr("data-city") },
                            success: function (json) {

                                if (json != null) {


                                    var $el = $("#painters");
                                    $el.empty(); // remove old options
                                    $("#painters").append(json.Response);

                                    $.each(json.EditPainter, function (value, key) {
                                        
                                        if (key.PainterAssociationStatus == true) { $("#painter" + key.ID + "").attr("checked", true); }
                                        else { $("#painter" + key.ID + "").attr("checked", false); }
                                        a.push(key.ID);
                                    });

                                }

                                else { alertify.success('All Painters Assigned To Jobs.'); }
                            }

                        });

                        $('html, body').animate({
                            scrollTop: $("#main-content").offset().top
                        }, 500);

                        $('#ID').val($(this).attr("data-id"));
                        $('#create').text('Update');

                        $("#Title").val($(this).attr("data-title"));
                        $("#RegionalHeadID").val($(this).attr("data-regionalheadid"));
                        $("#HiddenRegionalHeadID").val($(this).attr("data-regionalheadid"));

                        $("#SaleOfficerID").val($(this).attr("data-saleofficerid"));
                        $("#RetailerID").val($(this).attr("data-retailerid"));
                        $("#RetailerID").trigger("chosen:updates");
                        $('#PainterCityID option:contains(' + $(this).attr("data-city") + ')').each(function () {
                            $(this).attr('selected', 'selected');
                        });

                    });
                }

                if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".delete").css("display", "none"); }
                else {
                    $(".delete").on("click", function () {

                        var ID = $(this).attr("data-id");

                        // confirm dialog
                        alertify.confirm("Are You Sure You Want To Delete This Record ?  ", function (e) {
                            if (e) {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("DeleteRetailerPaintersAssociation", "Painter")",
                                    data: { ID: ID },
                                    success: function (data) {

                                        if (data == "0") {
                                            alertify.success('Record Deleted Successfully');
                                            var table = $('#datatab').DataTable();
                                            table.row(this).remove().draw(false);
                                            LoadPainters($("#PainterCityID").find("option:selected").text());
                                            ClearForm();
                                        }

                                        else { alertify.error('This Record Can Not be Deleted.'); }
                                    }

                                });

                            } else { }
                        });

                    });
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
            "oLanguage": { "sSearch": "Search Dealer : " },
            "sDom": 'lftipr',
            "processing": true,
            "deferRender": true,
            "bSelect": true,
            "columns": [
           { "data": "ID", "bVisible": false },
           { "data": "ID", "bSortable": false },
           { "data": "Title" },
           { "data": "RegionalHeadName" },
           { "data": "SaleOfficerName" },
           { "data": "RetailerName" },
           { "data": "NoOfPainters" },
           {
               "sClass": "center-align-td",
               "mData": null,
               "bSortable": false,
               "mRender": function (data, type, row) {
                   return '<button class="btn btn-success edit" data-id=' + row.ID + '  data-title=' + '"' + row.Title + '" data-regionalheadid=' + '"' + row.RegionalHeadID + '"' + '  data-saleofficerid=' + row.SaleOfficerID + ' data-retailerid=' + row.RetailerID + ' data-TotalPainters=' + row.TotalNoOfPainters + ' data-city=' + row.City + ' >' + '<i class=icon-pencil></i>' + '</button>&nbsp;<button class="btn btn-info delete" data-id=' + row.ID + '>' + '<i class=icon-trash></i>' + '</button>';
               }
           }
            ],
            "order": [1, "asc"]

        });

    }*@

    function LoadPainters(CityName) {
        try {
            $.ajax({
                type: "POST",
                data: {
                    //RegionalHeadID: $("#RegionalHeadID").val(), SaleOfficerID: $("#SaleOfficerID").val(), RetailerID: $("#RetailerID").val(), CityName: CityName
                },
                url: "@Url.Action("LoadCitiesEdit", "Painter")",
                success: function (json) {
                    
                    var $el = $("#painters");
                    $el.empty(); // remove old options
                    $("#painters").append(json.Response);

                    sPainters = [];
                    for (i = 0 ; i < json.PainterIDs.length ; i++)
                    {
                        sPainters.push(json.PainterIDs[i]);
                    }
                    
                    $.each(json.Response, function (value, key) {

                        if (key.Selected == true) {
                            $("#painter" + key.ID + "").attr("checked", true);
                           
                        }
                        else { $("#painter" + key.ID + "").attr("checked", false); }
                        //sPainters.push(key.ID);
                    });


                },
                beforeSend: function () {
                    $("#progress").show();
                },
                complete: function () {
                    $("#progress").hide();
                },
                error: function () {
                }

            });
        } catch (e) {
            alert(e);

        }
    }

    function LoadRegionalHead() {

        var RegionalHeadType = $("#Type").val();

        $.ajax({
            type: "POST",
            data: { RegionalHeadType: RegionalHeadType },
            url: "@Url.Action("GetRegionalHeadAccordingToType", "SaleOfficer")",
            dataType: 'json',
            success: function (json) {

                var $el = $("#RegionalHeadID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {

                    $el.append($("<option></option>")
                            .attr("value", key.ID).text(key.Name));
                });
                $("#RegionalHeadID").trigger("change");
            }

        });
    }

    $(document).ready(function () {
       // $("#liPainter,#liManagePainter").addClass("active");
        window.asd = $('.SlectBox').SumoSelect({ csvDispCount: 4 });
        $("#TID").change(function () {
           // LoadPainters($(this).find("option:selected").text());
        });
        @*$.ajax({
            type: "POST",
            url: "@Url.Action("PaintersInfo", "Painter")",
                            data: {},
                            success: function (json) {

                                if (json != null) {
                                    $("#totalpainters").html(json.TotalNoOfPainters);
                                    $("#usedpainters").html(json.UsedPainters);
                                    $("#freepainters").html(json.FreePainters);
                                    $("#cities").html(json.Cities);
                                }
                            }
         });

        var WriteCheck = "0";

        //GenerateDetailGrid();
        $("#RetailerID").trigger('change');


       // LoadPainters($("#PainterCityID").find("option:selected").text());

        $("#PainterCityID").change(function () {
            LoadPainters($(this).find("option:selected").text());
        });

        if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }


        $("#RegionalHeadID").change(function () {

            $("#HiddenRegionalHeadID").val($(this).val())
            LoadSalesOfficer($(this).val());
            //var dt = $('#datatab').DataTable();
            //dt.ajax.reload();

        });

        $("#SaleOfficerID").change(function () {

            LoadRetailers($(this).val());
            //var dt = $('#datatab').DataTable();
            //dt.ajax.reload();

        });


        $("#RetailerID").change(function () {
            //var CityName = $("#PainterCityID").text();
            //LoadPainters(CityName);
            $("#PainterCityID").trigger("change");
        });


        function LoadSalesOfficer(RegionalHeadID) {

            $.ajax({
                type: "POST",
                data: { RegionalHeadID: RegionalHeadID },
                url: "@Url.Action("GetAllSaleOfficerListRelatedToDealer", "Job")",
                success: function (json) {

                    var $el = $("#SaleOfficerID");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {
                        $el.append($("<option></option>").val(key.SaleOfficerID).text(key.SaleOfficerName));
                    });

                    $('#SaleOfficerID').trigger("chosen:update");
                    $('#SaleOfficerID').trigger("change");
                }

            });

        }

        function LoadRetailers(SOID) {
            var $e2 = $("#RetailerID");
            if (SOID == null)
            { $e2.empty(); }
            else {
                $.ajax({
                    type: "POST",
                    data: { SaleOfficerID: SOID },
                    url: "@Url.Action("LoadRetailersRelatedToSaleOfficer", "Painter")",
                     success: function (json) {
                         $e2.empty();
                         $.each(json, function (value, key) {
                             $e2.append($("<option></option>").val(key.ID).text(key.Name).attr("data-cityname", key.CItyName));
                         });
                     }
                 });
             }
         }*@
        /*
        $("#btnRefresh").click(function () {
            LoadPainters($("#PainterCityID").find("option:selected").text());
            ClearForm();
        });

        $("#btnRefresh").trigger('click');
        $("#PainterCityID").trigger('change');*/

    });


     function ClearForm() {
         $('#ID').val(0);
         $('#Title').val('');
         $('#create').text('Create');
         $("#RegionalHeadID").trigger("change");
         $("#RegionalHeadID").trigger("chosen:update");
         $("#SelectedPainters").val("");
     }

     function OnSuccess(response) {
         if (response == "1") {
             alertify.success("Association Saved Successfully");
             $('#create').text('Create');
             LoadPainters($("#PainterCityID").find("option:selected").text());
             ClearForm();
         }
         else if (response == "2") {
             alertify.error("Please Select Any Painter For Association");
         }
         else if (response == "3") {
             alertify.error("Please Select Any Painter For Association");
         }
         else if (response == "0") {
             alertify.error("Unable To Save Association.");
         }
         else {
             alertify.error(response);
         }

     }

     function OnFailure(response) {
         if (response.status == 422) {
             var errors = JSON.parse(response.responseText);
             alertify.error(errors.errors);
         }
         else {
             alertify.error(response);
         }
     }

</script>

